openapi: "3.0.0"
info:
  version: 1.0.0
  title: Nimiq.Watch
  contact:
    email: hello@soerenschwert.de
    url: 'https://nimiq.watch/#about'
  license:
    name: MIT
  x-logo:
    url: 'https://terorie.com/nimiq-watch-docs/logo.png'
  description: |
    This API is powering [the blockchain explorer](https://nimiq.watch/)
    of the new __Nimiq blockchain__ project.

    To learn more about the Nimiq blockchain,
    visit the [homepage](https://nimiq.com),
    check out @nimiq on [Twitter](https://twitter.com/nimiq)
    or [Medium](https://medium.com/nimiq-network)
    and join the [Discord](https://discord.gg/cMHemg8)
    and [Telegram](https://t.me/joinchat/AAAAAEJW-ozFwo7Er9jpHw) channels.

    To use this API for your project, contact __@Soeren#8998__ in Nimiq's Discord or write to hello@soerenschwert.de

tags:
  - name: Blocks
    description: Blocks in the Nimiq blockchain
  - name: Accounts
    description: Accounts on the Nimiq blockchain
  - name: Statistics
    description: Statistics about the Nimiq network

servers:
  - url: https://api.nimiq.watch
  - url: http://api.nimiq.watch

paths:
  /latest/{limit}/{skip}:
    get:
      tags:
        - Blocks
      summary: Latest Blocks
      operationId: getLatest
      parameters:
        - name: limit
          in: path
          required: true
          description: Max number of elements to return
          schema:
            type: integer
        - name: skip
          in: path
          required: true
          description: Elements to skip
          schema:
            type: integer
      responses:
        201:
          description: Latest Blocks
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Blocks"
        500:
          description: Invalid limit/skip parameters

  /block/{identifier}:
    get:
      tags:
        - Blocks
      summary: Details Of Block
      operationId: getBlock
      parameters:
        - name: identifier
          in: path
          required: true
          description: Block Number
          schema:
            type: integer
      responses:
        202:
          description: Block Details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlockDetail"
        404:
          description: Block Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example: {"error": "Block not found"}

  /account/{address}:
    get:
      tags:
        - Accounts
      summary: Details Of Account
      operationId: getAccount
      parameters:
        - name: address
          in: path
          required: true
          description: Address
          example: "NQ11 P00L 2HYP TUK8 VY6L 2N22 MMBU MHHR BSAA"
          schema:
            type: string
            format: address
      responses:
        201:
          description: Account Information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlockDetail"
        400:
          description: "Invalid Address"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /account-transactions/{address}/{limit}/{skip}:
    get:
      tags:
        - Accounts
      summary: Transactions Of Account
      operationId: getAccountTransactions
      parameters:
        - name: address
          in: path
          required: true
          description: Account address
          schema:
            type: string
            format: address
            example: "NQ88 D1R3 KR4H KSY2 CQYR 5G0C 80X4 0KED 32G8"
        - name: limit
          in: path
          required: true
          description: Max number of elements to return
          schema:
            type: integer
        - name: skip
          in: path
          required: true
          description: Elements to skip
          schema:
            type: integer
      responses:
        201:
          description: Transactions Of Account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transactions"
        500:
          description: Invalid limit/skip parameters

  /account-blocks/{address}/{limit}/{skip}:
    get:
      tags:
        - Accounts
      summary: Blocks Mined By Account
      operationId: getAccountBlocks
      parameters:
        - name: address
          in: path
          required: true
          description: Account address
          schema:
            type: string
            format: address
            example: "NQ88 D1R3 KR4H KSY2 CQYR 5G0C 80X4 0KED 32G8"
        - name: limit
          in: path
          required: true
          description: Max number of elements to return
          schema:
            type: integer
        - name: skip
          in: path
          required: true
          description: Elements to skip
          schema:
            type: integer
      responses:
        201:
          description: Blocks Mined By Account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Blocks"
        500:
          description: Invalid limit/skip parameters

  /statistics/difficulty/{range}:
    get:
      tags:
        - Statistics
      summary: Difficulty Per Block
      operationId: getStatsDifficulty
      parameters:
        - name: range
          in: path
          required: true
          description: Range of statistics data points
          schema:
            type: string
            enum:
              - day
              - week
              - month
              - year
      responses:
        200:
          description: Difficulty Per Block
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DifficultyStats"

  /statistics/miners/{range}:
    get:
      tags:
        - Statistics
      summary: Miners Of Last Blocks
      operationId: getStatsMiners
      parameters:
        - name: range
          in: path
          required: true
          description: Range of statistics data points (hours)
          schema:
            type: integer
            minimum: 1
            maximum: 24
      responses:
        200:
          description: Miners Of Last Blocks
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MinerStats"

  /statistics/transactions/{range}:
    get:
      tags:
        - Statistics
      summary: Transaction Amount Per Block
      operationId: getStatsTransactions
      parameters:
        - name: range
          in: path
          required: true
          description: Range of statistics data points
          schema:
            type: string
            enum:
              - day
              - week
              - month
              - year
      responses:
        200:
          description: Transaction Amount Per Block
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionStats"

components:
  schemas:
    AccountDetail:
      properties:
        address:
          type: string
          format: address
          example: "NQ11 P00L 2HYP TUK8 VY6L 2N22 MMBU MHHR BSAA"
        balance:
          type: integer
          format: uint64
          example: 66307921225
        type:
          type: integer
          example: 0
        transactions:
          $ref: "#/components/schemas/Transaction"
        blocks:
          description: Blocks mined by address
          $ref: "#/components/schemas/Blocks"
    BlockDetail:
      properties:
        height:
          type: integer
          example: 2000
        timestamp:
          type: integer
          format: uint32
          example: 1523807468
        hash:
          type: string
          format: hex
          example: "fbe1d545b321258c5535e5fe9c47d1dd6ea162816f7777bb67446f64dd68a738"
        miner_address:
          type: string
          format: address
          example: "NQ58 U4HN TVVA FCRS VLYL 8XTL K0B7 2FVD EC6B"
        transaction_count:
          type: integer
          example: 1
        size:
          type: integer
          example: 453
        difficulty:
          type: number
          example: 349133.88
        extra_data:
          type: string
          format: byte
          example: "c2t5cG9vbC11czEtNA=="
        reward:
          type: integer
          format: uint64
          example: 440387595
        transactions:
          $ref: "#/components/schemas/Transactions"
    Block:
      properties:
        height:
          type: integer
          example: 443399
        timestamp:
          type: integer
          format: uint32
          example: 1550423567
        hash:
          type: string
          format: hex
          example: "b06f45228823045e4cf7064a305e3ba625b4175c95f21226dac53ec2f8e156c7"
        miner_address:
          type: string
          format: address
          example: "NQ11 P00L 2HYP TUK8 VY6L 2N22 MMBU MHHR BSAA"
        transaction_count:
          type: integer
          example: 4
        size:
          type: integer
          example: 991
        difficulty:
          type: number
          example: 894956.01
    Blocks:
      type: array
      items:
        $ref: "#/components/schemas/Block"
    Transaction:
      properties:
        hash:
          type: string
          format: hex
          example: "50f33b7e4fb5789e2e8af07d532e669b1b52d72978e5fbd6be5c084277f4e55d"
        sender_address:
          type: string
          format: address
          example: "NQ88 D1R3 KR4H KSY2 CQYR 5G0C 80X4 0KED 32G8"
        receiver_address:
          type: string
          format: address
          example: "NQ48 8CKH BA24 2VR3 N249 N8MN J5XX 74DB 5XJ8"
        value:
          type: integer
          format: uint64
          example: 68713533000
        fee:
          type: integer
          format: uint64
          example: 0
    Transactions:
      type: array
      items:
        $ref: "#/components/schemas/Transaction"
    DifficultyPoint:
      properties:
        height:
          type: integer
          example: 433420
        timestamp:
          type: integer
          format: uint32
          example: 1549821671
        difficulty:
          type: number
          example: 1091887.049697
    DifficultyStats:
      type: array
      items:
        $ref: "#/components/schemas/DifficultyPoint"
      example: [
        {
            "height": 433420,
            "timestamp": 1549821671,
            "difficulty": 1091887.049697
        },
        {
            "height": 433486,
            "timestamp": 1549825228,
            "difficulty": 1182300.320303
        },
        {
            "height": 433552,
            "timestamp": 1549828869,
            "difficulty": 1154007.273478
        }
      ]
    Miner:
      properties:
        miner_address:
          type: string
          format: address
          example: "NQ11 P00L 2HYP TUK8 VY6L 2N22 MMBU MHHR BSAA"
        blocks_mined:
          type: integer
          example: 75
    MinerStats:
      type: array
      items:
        $ref: "#/components/schemas/Miner"
      example: [
        {
            "miner_address": "NQ48 8CKH BA24 2VR3 N249 N8MN J5XX 74DB 5XJ8",
            "blocks_mined": 335
        },
        {
            "miner_address": "NQ32 473Y R5T3 979R 325K S8UT 7E3A NRNS VBX2",
            "blocks_mined": 263
        },
        {
            "miner_address": "NQ11 P00L 2HYP TUK8 VY6L 2N22 MMBU MHHR BSAA",
            "blocks_mined": 75
        }
      ]
    TransactionPoint:
      properties:
        height:
          type: integer
          example: 433422
        timestamp:
          type: integer
          format: uint32
          example: 1549821705
        value:
          description: Total transaction value in Luna
          type: integer
          format: uint64
          example: 25912910058
        count:
          description: Number of transactions
          type: integer
          example: 153
    TransactionStats:
      items:
        $ref: "#/components/schemas/TransactionPoint"
      example: [
        {
            "block_height": 433422,
            "timestamp": 1549821705,
            "value": 25912910058,
            "count": 153
        },
        {
            "block_height": 433487,
            "timestamp": 1549825251,
            "value": 1602500000,
            "count": 18
        },
        {
            "block_height": 433554,
            "timestamp": 1549828952,
            "value": 95792701434,
            "count": 71
        }
      ]
    Error:
      properties:
        error:
          type: string
          example: "Something went wrong"
